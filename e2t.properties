###########################################
# EXCEL TO TEMPLATES (e2t) GENERATOR V5.0 #
###########################################

# Tous les paramètres de ce properties peuvent être surchargés en argument de VM
# Exemple pour lire la ligne 8 uniquement : -D excel.first.line=8 -D excel.last.line=8 
# Exemple pour désactiver la génération pour un template : -D generation.<TEMPLATE>.deactivate=true

#################################
# CONFIGURATION DES GENERATIONS #
#################################

# Localisation du fichier excel en input
excel.path=EXAMPLE.xls

# Paramètres de lecture du fichier excel 
# Obligatoires, sauf excel.last.line qui peut être laissé vide --> lecture jusqu'à la fin du fichier excel
# Valeurs comme dans excel : colonnes sous forme de lettres, lignes à partir de 1, feuilles : donner le libellé
excel.defaultSheet=SHEET
excel.first.line=7
excel.first.column=C
excel.last.column=AW
excel.last.line=

# Encoding de l'excel (par défaut UTF-8)
excel.encoding=ISO-8859-1

###############################################################################

# Variables Globales utilisées par les générations

# CLE=VALEUR

###############################################################################

# Générations

# README

generation.readme.comment=README file generation
generation.readme.template=README.txt.template
generation.readme.output=README.txt
generation.readme.sheet=SHEET

# Cartes Ispool Z

generation.EXAMPLE.comment=EXAMPLE generation
generation.EXAMPLE.template=EXAMPLE.template
generation.EXAMPLE.output=EXAMPLE_PATH/#{C|trim()}
generation.EXAMPLE.filter=#{isNotEmpty(${VAR})}
generation.EXAMPLE.VAR=#{D|trim()}

###############################################################################
# Fonctions utilisateur, déployées dans lib/ext dans des jars
###############################################################################

# function.XXX=XXX

##########################
# PARAMETRES SYSTEME e2t #
##########################

e2t.version=V5.0

# Chemins du generator
templates.path=templates
outputs.path=outputs
backups.path=backups
lib.ext.path=lib/ext

# Fonctions système d'e2t
# NOTE : apache commons-lang, apache commons-io, jxl sont intégrés dans e2t, 
# il est par conséquent possible d'enrichir e2t avec des fonctions de ses 
# librairies ci-dessous
function.trim=org.apache.commons.lang.StringUtils.trim
function.replace=e2t.functions.StringUtils.replace
function.length=e2t.functions.StringUtils.length
function.date=e2t.functions.StringUtils.date
function.dateDir=e2t.functions.StringUtils.dateDir
function.hostname=e2t.functions.StringUtils.hostname
function.concatInsertingString=e2t.functions.StringUtils.concatInsertingString
function.leftPad=org.apache.commons.lang.StringUtils.leftPad
function.rightPad=org.apache.commons.lang.StringUtils.rightPad
function.set=e2t.functions.Variables.set
function.get=e2t.functions.Variables.get
function.ifThenElse=e2t.functions.Logic.ifThenElse
function.equals=e2t.functions.Logic.equals
function.notEquals=e2t.functions.Logic.notEquals
function.not=e2t.functions.Logic.not
function.isEmpty=org.apache.commons.lang.StringUtils.isEmpty
function.isNotEmpty=org.apache.commons.lang.StringUtils.isNotEmpty
function.startsWith=org.apache.commons.lang.StringUtils.startsWith
function.endsWith=org.apache.commons.lang.StringUtils.endsWith
function.upperCase=org.apache.commons.lang.StringUtils.upperCase
function.lowerCase=org.apache.commons.lang.StringUtils.lowerCase
function.andNotEmpty=e2t.functions.Logic.andNotEmpty
function.forEachLine=e2t.functions.TemplatesIterator.forEachLine
